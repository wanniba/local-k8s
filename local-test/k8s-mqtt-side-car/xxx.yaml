---
# Source: vernemq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-vernemq
  namespace: default
  labels:
    app.kubernetes.io/name: vernemq
    helm.sh/chart: vernemq-2.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: vernemq/templates/role.yaml
# VerneMQ needs to query k8s apiserver to list the other pods in the namespace
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-vernemq
  namespace: default
  labels:
    app.kubernetes.io/name: vernemq
    helm.sh/chart: vernemq-2.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get"]
---
# Source: vernemq/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-vernemq
  namespace: default
  labels:
    app.kubernetes.io/name: vernemq
    helm.sh/chart: vernemq-2.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-vernemq 
    namespace: default
roleRef:
  kind: Role 
  name: my-release-vernemq 
  apiGroup: rbac.authorization.k8s.io
---
# Source: vernemq/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-vernemq-headless
  labels:
    app.kubernetes.io/name: vernemq
    helm.sh/chart: vernemq-2.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: empd
    port: 4369
  - name: metrics
    port: 8888
    targetPort: api
  - name: mqtt
    port: 1883
    targetPort: mqtt
  - name: mqtts
    port: 8883
    targetPort: mqtts
  - name: ws
    port: 8080
    targetPort: ws
  - name: wss
    port: 8443
    targetPort: wss
  selector:
    app.kubernetes.io/name: vernemq
    app.kubernetes.io/instance: my-release
---
# Source: vernemq/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-vernemq
  labels:
    app.kubernetes.io/name: vernemq
    helm.sh/chart: vernemq-2.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1883
      targetPort: mqtt
      name: mqtt
  selector:
    app.kubernetes.io/name: vernemq
    app.kubernetes.io/instance: my-release
---
# Source: vernemq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-vernemq
  labels:
    app.kubernetes.io/name: vernemq
    helm.sh/chart: vernemq-2.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-vernemq-headless
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vernemq
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vernemq
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-vernemq
      terminationGracePeriodSeconds: 60
      containers:
        - name: vernemq
          image: "vernemq/vernemq:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1883
              name: mqtt
            - containerPort: 8883
              name: mqtts
            - containerPort: 4369
              name: epmd
            - containerPort: 44053
              name: vmq
            - containerPort: 8080
              name: ws
            - containerPort: 8443
              name: wss
            - containerPort: 8888
              name: api
            - containerPort: 9100
            - containerPort: 9101
            - containerPort: 9102
            - containerPort: 9103
            - containerPort: 9104
            - containerPort: 9105
            - containerPort: 9106
            - containerPort: 9107
            - containerPort: 9108
            - containerPort: 9109
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DOCKER_VERNEMQ_DISCOVERY_KUBERNETES
              value: "1"
            - name: DOCKER_VERNEMQ_KUBERNETES_LABEL_SELECTOR
              value: "app.kubernetes.io/name=vernemq,app.kubernetes.io/instance=my-release"
            - name: DOCKER_VERNEMQ_LISTENER__TCP__LOCALHOST
              value: "127.0.0.1:1883"
            
            - name: DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_ALLOW_PUBLISH_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_ALLOW_SUBSCRIBE_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_ALLOW_UNSUBSCRIBE_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_ACCEPT_EULA
              value: "yes"
            - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
              value: "on"
          envFrom:
            
            []
          resources:
            
            {}
          livenessProbe:
            httpGet:
              path: /health
              port: api
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: api
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: logs
              mountPath: /vernemq/log
            - name: data
              mountPath: /vernemq/data
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - vernemq
      securityContext:
        
        fsGroup: 10000
        runAsGroup: 10000
        runAsUser: 10000
      volumes:
        - name: logs
          emptyDir: {}
        - name: data
